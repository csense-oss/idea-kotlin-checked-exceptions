package csense.idea.kotlin.checked.exceptions;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import csense.idea.kotlin.checked.exceptions.settings.Settings;
import org.jetbrains.annotations.NotNull;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;

public class SettingsPaneUi {
    @NotNull
    public JPanel root;

    @NotNull
    private JCheckBox ignoreRuntimeExceptionsCheckBox;

    private boolean didChange = false;

    public SettingsPaneUi() {
        AbstractAction didChangeCallback = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setDidChange(true);
            }
        };
        ignoreRuntimeExceptionsCheckBox.setSelected(Settings.INSTANCE.getIgnoreRuntimeExceptions());
        ignoreRuntimeExceptionsCheckBox.setAction(didChangeCallback);
    }



    public void store() {
        Settings.INSTANCE.setIgnoreRuntimeExceptions(ignoreRuntimeExceptionsCheckBox.isSelected());
        setDidChange(false);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Checked exceptions severity");
        root.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Highlight\n(via gutter) the checked exceptions locations ?");
        root.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }


    public boolean didChange() {
        return didChange;
    }

    public void setDidChange(boolean didChange) {
        this.didChange = didChange;
    }

}
